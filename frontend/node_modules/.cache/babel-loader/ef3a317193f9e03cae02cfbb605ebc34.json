{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Pharmacy\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/CartScreen.css\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport StripeCheckout from \"react-stripe-checkout\"; // Components\n\nimport CartItem from \"../components/CartItem\"; // Actions\n\nimport { addToCart, removeFromCart } from \"../redux/actions/cartActions\";\n\nconst CartScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  useEffect(() => {}, []);\n\n  const qtyChangeHandler = (id, qty) => {\n    dispatch(addToCart(id, qty));\n  }; // Removing selected item from the cart\n\n\n  const removeFromCartHandler = id => {\n    dispatch(removeFromCart(id));\n  }; // To get the total items present in the cart\n\n\n  const getCartCount = () => {\n    return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\n  }; // Getting the total Price \n\n\n  const getCartSubTotal = () => {\n    return cartItems.reduce((price, item) => price + item.price * item.qty, 0).toFixed(2);\n  }; // Make Payment\n\n\n  const makePayment = token => {\n    const body = {\n      token,\n      product: cartItems,\n      price: getCartSubTotal()\n    };\n    const headers = {\n      \"content-type\": \"application/json\"\n    };\n    return fetch(`http://localhost:5000/payment`, {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(body)\n    }).then(response => {\n      console.log(\"RESPONSE\", response);\n      const {\n        status\n      } = response;\n      console.log(\"status\", status); // Empty The cart after Succcesfull Payment\n\n      cartItems.forEach(item => dispatch(removeFromCart(item.product)));\n    }).catch(error => {\n      console.log(\"ERROR\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartscreen\",\n      style: {\n        marginBottom: \"460px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cartscreen__left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Your Cart Is Empty \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n          item: item,\n          qtyChangeHandler: qtyChangeHandler,\n          removeHandler: removeFromCartHandler\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cartscreen__right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cartscreen__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Subtotal (\", getCartCount(), \") items\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"TOTAL(INR) : \\u20B9\", getCartSubTotal(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"TOTAL(USD) : $\", getCartSubTotal() * 0.014, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: function () {\n              console.log(process.env.REACT_APP_KEY);\n            },\n            children: /*#__PURE__*/_jsxDEV(StripeCheckout, {\n              stripeKey: \"\",\n              token: makePayment,\n              amount: getCartSubTotal() * 100 * 0.014,\n              shippingAddress: true,\n              billingAddress: true,\n              name: \"Buy Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Pharmacy/frontend/src/screens/CartScreen.js"],"names":["useEffect","useSelector","useDispatch","Link","StripeCheckout","CartItem","addToCart","removeFromCart","CartScreen","dispatch","cart","state","cartItems","qtyChangeHandler","id","qty","removeFromCartHandler","getCartCount","reduce","item","Number","getCartSubTotal","price","toFixed","makePayment","token","body","product","headers","fetch","method","JSON","stringify","then","response","console","log","status","forEach","catch","error","marginBottom","length","map","process","env","REACT_APP_KEY"],"mappings":"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","sourcesContent":["import \"../styles/CartScreen.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\n// Components\r\nimport CartItem from \"../components/CartItem\";\r\n\r\n// Actions\r\nimport { addToCart, removeFromCart } from \"../redux/actions/cartActions\";\r\n\r\n\r\nconst CartScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => { }, []);\r\n\r\n  const qtyChangeHandler = (id, qty) => {\r\n    dispatch(addToCart(id, qty));\r\n  };\r\n\r\n  // Removing selected item from the cart\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  // To get the total items present in the cart\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n  };\r\n  // Getting the total Price \r\n  const getCartSubTotal = () => {\r\n    return cartItems\r\n      .reduce((price, item) => price + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  };\r\n    \r\n\r\n  // Make Payment\r\n  const makePayment = token => {\r\n    const body = {\r\n      token,\r\n      product: cartItems,\r\n      price: getCartSubTotal()\r\n\r\n    }\r\n    const headers = {\r\n      \"content-type\": \"application/json\"\r\n    }\r\n\r\n    return fetch(`http://localhost:5000/payment`, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(body)\r\n    }).then(response => {\r\n      console.log(\"RESPONSE\", response)\r\n      const { status } = response\r\n      console.log(\"status\", status)\r\n\r\n      // Empty The cart after Succcesfull Payment\r\n      cartItems.forEach(item => dispatch(removeFromCart(item.product)))\r\n    }).catch(error => {\r\n      console.log(\"ERROR\", error)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cartscreen\" style={{ marginBottom: \"460px\" }}>\r\n        <div className=\"cartscreen__left\">\r\n          <h2>Shopping Cart</h2>\r\n\r\n          {cartItems.length === 0 ? (\r\n            <div>\r\n              Your Cart Is Empty <Link to=\"/\">Go Back</Link>\r\n            </div>\r\n          ) : (\r\n            cartItems.map((item) => (\r\n              <CartItem\r\n                key={item.product}\r\n                item={item}\r\n                qtyChangeHandler={qtyChangeHandler}\r\n                removeHandler={removeFromCartHandler}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"cartscreen__right\">\r\n          <div className=\"cartscreen__info\">\r\n            <p>Subtotal ({getCartCount()}) items</p>\r\n            <p>TOTAL(INR) : ₹{getCartSubTotal()} </p>\r\n            <p>TOTAL(USD) : ${getCartSubTotal() * 0.014} </p>\r\n          </div>\r\n          <div>\r\n            <button type=\"button\" onClick={function() {\r\n              console.log(process.env.REACT_APP_KEY)\r\n              }}>\r\n              <StripeCheckout stripeKey=\"\"\r\n                token={makePayment} amount={getCartSubTotal() * 100 * 0.014}\r\n                shippingAddress\r\n                billingAddress\r\n                name=\"Buy Products\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n"]},"metadata":{},"sourceType":"module"}